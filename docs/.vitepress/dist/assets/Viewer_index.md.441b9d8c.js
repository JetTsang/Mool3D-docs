import{p as t,a,d as s,r as e,b as n,e as l,w as d,f as o,o as i,c as r,g as c,h as p,i as u,v,u as g,t as x,j as y,k as h}from"./app.ceccd6b0.js";import{V as f,b as k}from"./index.e1633dd4.js";class m extends f{constructor(t){super(t),this.initSource()}}t("data-v-346c8a9a");const w={class:"wrap"},b={class:"loading"},_=y('<div class="loading-text" data-v-346c8a9a><span class="loading-text-words" data-v-346c8a9a>L</span><span class="loading-text-words" data-v-346c8a9a>O</span><span class="loading-text-words" data-v-346c8a9a>A</span><span class="loading-text-words" data-v-346c8a9a>D</span><span class="loading-text-words" data-v-346c8a9a>I</span><span class="loading-text-words" data-v-346c8a9a>N</span><span class="loading-text-words" data-v-346c8a9a>G</span></div>',1),T={class:"loding-percent"},S={class:"container"},I={class:"container-text"},C={class:"tips"},A=y('<div class="loading-text" data-v-346c8a9a><span class="loading-text-words" data-v-346c8a9a>请</span><span class="loading-text-words" data-v-346c8a9a>点</span><span class="loading-text-words" data-v-346c8a9a>击</span><span class="loading-text-words" data-v-346c8a9a>下</span><span class="loading-text-words" data-v-346c8a9a>方</span><span class="loading-text-words" data-v-346c8a9a>按</span><span class="loading-text-words" data-v-346c8a9a>钮</span></div>',1),j=c("span",null,"Click!",-1),E=c("span",null,"模型",-1),N=c("span",null,"Click!",-1),P=c("span",null,"环境贴图",-1),V=c("span",null,"Click!",-1),G=c("span",null,"天空",-1);a();var M=s({props:{sceneId:{type:String,default:"0"},visible:{type:Boolean,default:!1}},setup(t){const a=t,s=e();let y,h=e(!0),f=e(!0),M=e(!1),D=e(""),L=e("0");n((()=>{O()})),l((()=>{y&&y.destroy(),k.off("scene")})),k.on("scene",(t=>{({loading:()=>{L.value=t.progressNum,f.value=t.value},transition:()=>{M.value=t.value}})[t.type]()})),d((()=>L),(t=>{k.emit("progressNum",g(t)),parseInt(g(t))>=100&&setTimeout((()=>{f.value=!1,M.value=!0,setTimeout((()=>{M.value=!1}),1500)}),1e3)}),{deep:!0}),d((()=>a.sceneId),(()=>{}),{deep:!0,immediate:!0});const O=()=>{const t=s.value;y=new m({el:t,tween:o,path:"../public/scene/"})},R=()=>{h.value=!1,y.initModel(),U("1")},B=()=>{h.value=!1,y.initEnvironment({path:"exr.exr",type:"exr"})},H=()=>{h.value=!1,y.initSky(),y.sky.initShaderSky({scale:100,turbidity:2,rayleigh:4,postion:[15,2,-20]})},U=t=>{switch(t){case"1":y.setScene(1),D.value="场景",y.flyTo({position:[0,0,6],controls:[0,2,0],duration:2e3})}};return(t,a)=>(i(),r("div",null,[c("div",w,[p("    loding"),u(c("div",b,[_,c("div",T,x(parseInt(g(L)))+"%",1)],512),[[v,g(f)]]),p("转场动画"),u(c("div",S,[c("span",I,x(g(D)),1)],512),[[v,g(M)]]),c("div",{ref:s,id:"map",class:"map"},null,512),u(c("div",C,[A],512),[[v,g(h)]])]),c("div",{class:"btn"},[c("button",{class:"custom-btn btn-12",onClick:R},[j,E]),c("button",{class:"custom-btn btn-12",onClick:B},[N,P]),c("button",{class:"custom-btn btn-12",onClick:H},[V,G])])]))}});M.__scopeId="data-v-346c8a9a";const D=c("h1",{id:"主类"},[c("a",{class:"header-anchor",href:"#主类","aria-hidden":"true"},"#"),h(" 主类")],-1),L=y('<h2 id="使用"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><div class="language-js"><pre><code>el<span class="token operator">:</span>dom元素\ntween<span class="token operator">:</span>过渡库\npath<span class="token operator">:</span>加载路径\n<span class="token keyword">new</span> <span class="token class-name">Viewer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  el<span class="token operator">:</span> el <span class="token keyword">as</span> HTMLElement<span class="token punctuation">,</span>\n  tween<span class="token operator">:</span> <span class="token constant">TWEEN</span><span class="token punctuation">,</span>\n  path<span class="token operator">:</span><span class="token string">&#39;&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="api"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h2><table><thead><tr><th>属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td>scene</td><td style="text-align:left;">当前场景容器</td></tr><tr><td>gAmGroup</td><td style="text-align:left;">环境场景</td></tr><tr><td>gRayGroup</td><td style="text-align:left;">鼠标射线拾取组</td></tr><tr><td>gScenes</td><td style="text-align:left;">所有场景容器</td></tr><tr><td>gStatus</td><td style="text-align:left;">场景是否存于内存</td></tr><tr><td>sceneidx</td><td style="text-align:left;">当前场景 id</td></tr><tr><td>model</td><td style="text-align:left;">模型类（执行 initModel 后）</td></tr><tr><td>clock</td><td style="text-align:left;">时钟对象</td></tr><tr><td>cameraType</td><td style="text-align:left;">相机类</td></tr><tr><td>activeCamera</td><td style="text-align:left;">当前激活相机</td></tr><tr><td>renderer</td><td style="text-align:left;">渲染类</td></tr><tr><td>controls</td><td style="text-align:left;">控制器类</td></tr><tr><td>animate</td><td style="text-align:left;">帧动画执行类</td></tr><tr><td>ambient</td><td style="text-align:left;">环境光</td></tr><tr><td>sky</td><td style="text-align:left;">天空类</td></tr><tr><td>environment</td><td style="text-align:left;">环境贴图</td></tr></tbody></table>',4),O='{"title":"主类","description":"","frontmatter":{},"headers":[{"level":2,"title":"使用","slug":"使用"},{"level":2,"title":"API","slug":"api"}],"relativePath":"Viewer/index.md","lastUpdated":1678068480455}',R={};const B=Object.assign(R,{setup:function(t){return(t,a)=>(i(),r("div",null,[D,c(M),L]))}});export default B;export{O as __pageData};
