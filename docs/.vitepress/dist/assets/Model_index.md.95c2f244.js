import{p as t,a,d as s,r as n,b as e,e as d,w as l,f as o,o as i,c as p,g as r,h as c,i as u,v as f,u as v,t as x,j as g,k as h}from"./app.ceccd6b0.js";import{V as k,b}from"./index.e1633dd4.js";class y extends k{constructor(t){super(t),this.initModel()}init(){this.initEnvironment({path:"exr.exr",type:"exr"}),this.initSky(),this.sky.initShaderSky({scale:100,turbidity:2,rayleigh:4,postion:[15,2,-20]})}}t("data-v-07a97fa0");const m={class:"wrap"},w={class:"loading"},_=g('<div class="loading-text" data-v-07a97fa0><span class="loading-text-words" data-v-07a97fa0>L</span><span class="loading-text-words" data-v-07a97fa0>O</span><span class="loading-text-words" data-v-07a97fa0>A</span><span class="loading-text-words" data-v-07a97fa0>D</span><span class="loading-text-words" data-v-07a97fa0>I</span><span class="loading-text-words" data-v-07a97fa0>N</span><span class="loading-text-words" data-v-07a97fa0>G</span></div>',1),S={class:"loding-percent"},I={class:"container"},T={class:"container-text"},A={class:"tips"},N=g('<div class="loading-text" data-v-07a97fa0><span class="loading-text-words" data-v-07a97fa0>请</span><span class="loading-text-words" data-v-07a97fa0>点</span><span class="loading-text-words" data-v-07a97fa0>击</span><span class="loading-text-words" data-v-07a97fa0>下</span><span class="loading-text-words" data-v-07a97fa0>方</span><span class="loading-text-words" data-v-07a97fa0>按</span><span class="loading-text-words" data-v-07a97fa0>钮</span></div>',1),C=r("div",{class:"btn"},[c(' <button class="custom-btn btn-12" @click="loadSkyBox">\n        <span>Click!</span><span>天空盒子</span>\n      </button>\n      <button class="custom-btn btn-12" @click="loadSky">\n        <span>Click!</span><span>着色器天空</span>\n      </button> ')],-1);a();var j=s({props:{sceneId:{type:String,default:"0"},visible:{type:Boolean,default:!1}},setup(t){const a=t,s=n();let g,h=n(!1),k=n(!0),j=n(!1),E=n(""),P=n("0");e((()=>{V()})),d((()=>{g&&g.destroy(),b.off("scene")})),b.on("scene",(t=>{({loading:()=>{P.value=t.progressNum,k.value=t.value},transition:()=>{j.value=t.value}})[t.type]()})),l((()=>P),(t=>{b.emit("progressNum",v(t)),parseInt(v(t))>=100&&setTimeout((()=>{k.value=!1,j.value=!0,setTimeout((()=>{j.value=!1}),1500)}),1e3)}),{deep:!0}),l((()=>a.sceneId),(()=>{}),{deep:!0,immediate:!0});const V=()=>{const t=s.value;g=new y({el:t,tween:o,path:"../public/scene/"}),M("1")},M=t=>{switch(t){case"1":g.setScene(1,(()=>{g.init()})),E.value="场景",g.flyTo({position:[0,0,6],controls:[0,2,0],duration:2e3})}};return(t,a)=>(i(),p("div",null,[r("div",m,[c("    loding"),u(r("div",w,[_,r("div",S,x(parseInt(v(P)))+"%",1)],512),[[f,v(k)]]),c("转场动画"),u(r("div",I,[r("span",T,x(v(E)),1)],512),[[f,v(j)]]),r("div",{ref:s,id:"map",class:"map"},null,512),u(r("div",A,[N],512),[[f,v(h)]])]),C]))}});j.__scopeId="data-v-07a97fa0";const E=r("h1",{id:"模型类"},[r("a",{class:"header-anchor",href:"#模型类","aria-hidden":"true"},"#"),h(" 模型类")],-1),P=g('<h2 id="使用"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><div class="language-js"><pre><code>el<span class="token operator">:</span>dom元素\ntween<span class="token operator">:</span>过渡库\npath<span class="token operator">:</span>加载路径\nsceneA <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Index</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  el<span class="token operator">:</span> el <span class="token keyword">as</span> HTMLElement<span class="token punctuation">,</span>\n  tween<span class="token operator">:</span> <span class="token constant">TWEEN</span><span class="token punctuation">,</span>\n  path<span class="token operator">:</span> <span class="token string">&quot;../public/scene/&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nsceneA<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>callback<span class="token punctuation">)</span>\n</code></pre></div><h2 id="api"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h2><table><thead><tr><th>Viewer</th><th style="text-align:left;">描述</th><th>参数</th></tr></thead><tbody><tr><td>属性</td><td style="text-align:left;"></td><td></td></tr><tr><td>model</td><td style="text-align:left;">模型类(在 Viewer 通过 this.model 访问)</td><td></td></tr><tr><td>方法</td><td style="text-align:left;"></td><td></td></tr><tr><td>setScene</td><td style="text-align:left;">初始化与切换场景</td><td>index:场景 id<br> callback:模型加载成功回调</td></tr></tbody></table><table><thead><tr><th>实例下</th><th style="text-align:left;">描述</th><th></th></tr></thead><tbody><tr><td>属性</td><td style="text-align:left;"></td><td>类型</td></tr><tr><td>mixer</td><td style="text-align:left;">动画实例</td><td></td></tr><tr><td>animate</td><td style="text-align:left;">开始暂停执行动画</td><td>boolean</td></tr><tr><td>deepFunction</td><td style="text-align:left;">深度处理模型函数</td><td>fn[]</td></tr><tr><td>方法</td><td style="text-align:left;"></td><td>参数</td></tr><tr><td>load</td><td style="text-align:left;">加载配置文件渲染模型</td><td>sceneidx:当前场景 id(number) <br>callback:模型加载成功回调</td></tr><tr><td>loadModel</td><td style="text-align:left;">加载文件渲染模型</td><td>url:文件路径(string) <br>sceneidx:场景 id(number)<br>callback:模型加载成功回调(携带模型对象回参)</td></tr><tr><td>playAllClipes</td><td style="text-align:left;">执行全场景动画</td><td>sceneidx:当前场景 id (number)</td></tr><tr><td>playNameClipes</td><td style="text-align:left;">执行名称动画</td><td>sceneidx:当前场景 id (number)<br>clipName:动画名称 (string)</td></tr></tbody></table>',5),V='{"title":"模型类","description":"","frontmatter":{},"headers":[{"level":2,"title":"使用","slug":"使用"},{"level":2,"title":"API","slug":"api"}],"relativePath":"Model/index.md","lastUpdated":1679227850762}',M={};const q=Object.assign(M,{setup:function(t){return(t,a)=>(i(),p("div",null,[E,r(j),P]))}});export default q;export{V as __pageData};
