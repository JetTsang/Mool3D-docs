import{p as t,b as e,d,r as a,e as s,f as n,w as l,g as r,o as i,c as o,j as c,h as p,i as g,v as u,u as y,t as x,a as f,k as v}from"./app.fee60d13.js";import{V as h,b}from"./index.207465f4.js";class k extends h{constructor(t){super(t),this.initSource()}}t("data-v-7d2203c1");const m={class:"wrap"},w={class:"loading"},S=f('<div class="loading-text" data-v-7d2203c1><span class="loading-text-words" data-v-7d2203c1>L</span><span class="loading-text-words" data-v-7d2203c1>O</span><span class="loading-text-words" data-v-7d2203c1>A</span><span class="loading-text-words" data-v-7d2203c1>D</span><span class="loading-text-words" data-v-7d2203c1>I</span><span class="loading-text-words" data-v-7d2203c1>N</span><span class="loading-text-words" data-v-7d2203c1>G</span></div>',1),T={class:"loding-percent"},_={class:"container"},C={class:"container-text"},A={class:"tips"},I=f('<div class="loading-text" data-v-7d2203c1><span class="loading-text-words" data-v-7d2203c1>请</span><span class="loading-text-words" data-v-7d2203c1>点</span><span class="loading-text-words" data-v-7d2203c1>击</span><span class="loading-text-words" data-v-7d2203c1>下</span><span class="loading-text-words" data-v-7d2203c1>方</span><span class="loading-text-words" data-v-7d2203c1>按</span><span class="loading-text-words" data-v-7d2203c1>钮</span></div>',1),P=c("span",null,"Click!",-1),E=c("span",null,"模型",-1),L=c("span",null,"Click!",-1),q=c("span",null,"环境贴图",-1),V=c("span",null,"Click!",-1),j=c("span",null,"天空",-1);e();var G=d({props:{sceneId:{type:String,default:"0"},visible:{type:Boolean,default:!1}},setup(t){const e=t,d=a();let f,v=a(!0),h=a(!1),G=a(!1),M=a(""),N=a("0");s((()=>{R()})),n((()=>{f&&f.destroy(),b.off("scene")})),b.on("scene",(t=>{({loading:()=>{N.value=t.progressNum,h.value=t.value},transition:()=>{G.value=t.value}})[t.type]()})),l((()=>N),(t=>{b.emit("progressNum",y(t)),parseInt(y(t))>=100&&setTimeout((()=>{h.value=!1,G.value=!0,setTimeout((()=>{G.value=!1}),1500)}),1e3)}),{deep:!0}),l((()=>e.sceneId),(()=>{}),{deep:!0,immediate:!0});const R=()=>{const t=d.value;f=new k({el:t,tween:r,path:"../public/scene/"})},D=()=>{v.value=!1,f.initModel(),W("1")},B=()=>{v.value=!1,f.initEnvironment({path:"exr.exr",type:"exr"})},O=()=>{v.value=!1,f.initSky(),f.sky.initShaderSky({scale:100,turbidity:2,rayleigh:4,postion:[15,2,-20]})},W=t=>{switch(t){case"1":f.setScene(1),M.value="场景",f.flyTo({position:[0,0,6],controls:[0,2,0],duration:2e3})}};return(t,e)=>(i(),o("div",null,[c("div",m,[p("    loding"),g(c("div",w,[S,c("div",T,x(parseInt(y(N)))+"%",1)],512),[[u,y(h)]]),p("转场动画"),g(c("div",_,[c("span",C,x(y(M)),1)],512),[[u,y(G)]]),c("div",{ref:d,id:"map",class:"map"},null,512),g(c("div",A,[I],512),[[u,y(v)]])]),c("div",{class:"btn"},[c("button",{class:"custom-btn btn-12",onClick:D},[P,E]),c("button",{class:"custom-btn btn-12",onClick:B},[L,q]),c("button",{class:"custom-btn btn-12",onClick:O},[V,j])])]))}});G.__scopeId="data-v-7d2203c1";const M=c("h1",{id:"主类"},[c("a",{class:"header-anchor",href:"#主类","aria-hidden":"true"},"#"),v(" 主类")],-1),N=f('<h2 id="使用"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><div class="language-js"><pre><code>el<span class="token operator">:</span>dom元素\ntween<span class="token operator">:</span>过渡库\npath<span class="token operator">:</span>加载路径\n<span class="token keyword">new</span> <span class="token class-name">Viewer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  el<span class="token operator">:</span> el <span class="token keyword">as</span> HTMLElement<span class="token punctuation">,</span>\n  tween<span class="token operator">:</span> <span class="token constant">TWEEN</span><span class="token punctuation">,</span>\n  path<span class="token operator">:</span><span class="token string">&#39;&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="api"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h2><table><thead><tr><th>属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td>scene</td><td style="text-align:left;">当前场景容器</td></tr><tr><td>gAmGroup</td><td style="text-align:left;">环境场景</td></tr><tr><td>gRayGroup</td><td style="text-align:left;">鼠标射线拾取组</td></tr><tr><td>gScenes</td><td style="text-align:left;">所有场景容器</td></tr><tr><td>gStatus</td><td style="text-align:left;">场景是否存于内存</td></tr><tr><td>sceneidx</td><td style="text-align:left;">当前场景 id</td></tr><tr><td>model</td><td style="text-align:left;">模型类（执行 initModel 后）</td></tr><tr><td>clock</td><td style="text-align:left;">时钟对象</td></tr><tr><td>cameraType</td><td style="text-align:left;">相机类</td></tr><tr><td>activeCamera</td><td style="text-align:left;">当前激活相机</td></tr><tr><td>renderer</td><td style="text-align:left;">渲染类</td></tr><tr><td>controls</td><td style="text-align:left;">控制器类</td></tr><tr><td>animate</td><td style="text-align:left;">帧动画执行类</td></tr><tr><td>sky</td><td style="text-align:left;">天空类</td></tr><tr><td>environment</td><td style="text-align:left;">环境贴图</td></tr><tr><td>ambient</td><td style="text-align:left;">环境光</td></tr><tr><td>hemisphereLight</td><td style="text-align:left;">半球光</td></tr><tr><td>directional</td><td style="text-align:left;">平行光</td></tr><tr><td>pointGroup</td><td style="text-align:left;">点光源组合</td></tr><tr><td>spotLight</td><td style="text-align:left;">聚光灯</td></tr><tr><td>rectAreaLight</td><td style="text-align:left;">区域光</td></tr><tr><td>event</td><td style="text-align:left;">事件</td></tr><tr><td>souce</td><td style="text-align:left;">资源加载</td></tr><tr><td>parade</td><td style="text-align:left;">巡游</td></tr><tr><td>spriteGroup</td><td style="text-align:left;">粒子组合</td></tr><tr><td>fog</td><td style="text-align:left;">雾</td></tr><tr><td>water</td><td style="text-align:left;">水</td></tr></tbody></table><table><thead><tr><th>方法</th><th style="text-align:left;">参数</th><th>描述</th></tr></thead><tbody><tr><td>setScene</td><td style="text-align:left;">index:场景 id,callback:加载成功回调</td><td>加载场景</td></tr><tr><td>flyTo</td><td style="text-align:left;">{ <br>position:相机位置[],<br> controls?:中心点位置[],<br>duration?:动画时间,<br>easing?:动画模式,<br>start:开始回调,<br>done:结束回调,<br>stop:暂停回调,<br>update:更新回调 <br>}</td><td>相机飞行</td></tr><tr><td>destroy</td><td style="text-align:left;">无</td><td>销毁场景</td></tr><tr><td>initSky</td><td style="text-align:left;">无</td><td>天空盒子类初始化(两种不同类型的天空盒子)</td></tr><tr><td>initEnvironment</td><td style="text-align:left;">{<br>path:资源路径(options.path 底下的相对路径),<br>type:类型(hdr/exr)<br>}</td><td>环境贴图初始化</td></tr><tr><td>initEvent</td><td style="text-align:left;">types: [&quot;click&quot; , &quot;dblclick&quot; , &quot;mousemove&quot; ]</td><td>鼠标事件初始化</td></tr><tr><td>initModel</td><td style="text-align:left;">无</td><td>模型加载类</td></tr><tr><td>initSkyLight</td><td style="text-align:left;">skyColor:天空的灯颜色/ earthColor:地板灯颜色 /intensity:强度</td><td>半球光</td></tr><tr><td>initDirectional</td><td style="text-align:left;">color:颜色 /intensity:强度</td><td>平行光</td></tr><tr><td>initPointLight</td><td style="text-align:left;">color:颜色/intensity:强度/ distance:距离</td><td>点光源</td></tr><tr><td>initSpotLight</td><td style="text-align:left;">color:颜色/intensity:强度/ distance:距离/ target:照射对象(Vector3)</td><td>聚光灯</td></tr><tr><td>initRectArea</td><td style="text-align:left;">color:颜色/width:宽度/height:高度/intensity:强度/</td><td>单个区域光</td></tr><tr><td>initRectAreaBox</td><td style="text-align:left;">color:颜色/width:矩形边长/intensity:强度/ position:位置</td><td>模型加载类</td></tr><tr><td>initFog</td><td style="text-align:left;">无</td><td>雾初始化</td></tr><tr><td>initWater</td><td style="text-align:left;">详情看水相关类</td><td>水初始化</td></tr><tr><td>initSource</td><td style="text-align:left;">无</td><td>资源加载初始化</td></tr><tr><td>loadSprite</td><td style="text-align:left;">{texture:图片,name:名称}</td><td>加载粒子</td></tr><tr><td>initParade</td><td style="text-align:left;">详情查看巡游类</td><td>巡游</td></tr><tr><td>initParticleEngine</td><td style="text-align:left;">详情查看粒子系统类</td><td>粒子系统</td></tr><tr><td>getParticleTween</td><td style="text-align:left;">详情查看粒子系统类</td><td>粒子系统过度动画</td></tr><tr><td>setParticleMode</td><td style="text-align:left;">详情查看粒子系统类</td><td>设置粒子模式</td></tr></tbody></table>',5),R='{"title":"主类","description":"","frontmatter":{},"headers":[{"level":2,"title":"使用","slug":"使用"},{"level":2,"title":"API","slug":"api"}],"relativePath":"Viewer/index.md","lastUpdated":1679880131869}',D={};const B=Object.assign(D,{setup:function(t){return(t,e)=>(i(),o("div",null,[M,c(G),N]))}});export default B;export{R as __pageData};
